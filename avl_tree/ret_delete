idx = 3, key = 28
===============================> Before delete Node( 28 )
75 is root, the type of node is ROOT, precursor 65, successor 84.
33 is 75's left child, the type of node is TRUNK, precursor 28, successor 37.
28 is 33's left child, the type of node is TRUNK, precursor 17, successor 33.
17 is 28's left child, the type of node is LEAF, successor 28.
57 is 33's right child, the type of node is TRUNK, precursor 37, successor 65.
37 is 57's left child, the type of node is LEAF, precursor 33, successor 57.
65 is 57's right child, the type of node is LEAF, precursor 57, successor 75.
85 is 75's right child, the type of node is TRUNK, precursor 84, successor 93.
84 is 85's left child, the type of node is LEAF, precursor 75, successor 85.
93 is 85's right child, the type of node is LEAF, precursor 85.
[delete_avltree] the Node( 28 ) successor is 33( 0x7fc0e8400420 )
[delete_avltree] n_father -> key = 33
28 's type 3
--------
[[delete_avltree, n_successor]]the Node information: key 33 , father 75 , left 17 , right 57
[delete_avltree, bstree_delete]
75 is root, the type of node is ROOT, precursor 65, successor 84.
33 is 75's left child, the type of node is TRUNK, precursor 17, successor 37.
17 is 33's left child, the type of node is LEAF, successor 33.
57 is 33's right child, the type of node is TRUNK, precursor 37, successor 65.
37 is 57's left child, the type of node is LEAF, precursor 33, successor 57.
65 is 57's right child, the type of node is LEAF, precursor 57, successor 75.
85 is 75's right child, the type of node is TRUNK, precursor 84, successor 93.
84 is 85's left child, the type of node is LEAF, precursor 75, successor 85.
93 is 85's right child, the type of node is LEAF, precursor 85.
[lost_balance_node] tmp -> key = 33( 0x7fc0e8400420 )
[lost_balance_node] tmp -> key = 75( 0x7fc0e8400370 )
===============================> After delete Node( 28 ):
75 is root, the type of node is ROOT, precursor 65, successor 84.
33 is 75's left child, the type of node is TRUNK, precursor 17, successor 37.
17 is 33's left child, the type of node is LEAF, successor 33.
57 is 33's right child, the type of node is TRUNK, precursor 37, successor 65.
37 is 57's left child, the type of node is LEAF, precursor 33, successor 57.
65 is 57's right child, the type of node is LEAF, precursor 57, successor 75.
85 is 75's right child, the type of node is TRUNK, precursor 84, successor 93.
84 is 85's left child, the type of node is LEAF, precursor 75, successor 85.
93 is 85's right child, the type of node is LEAF, precursor 85.
idx = 7, key = 17
===============================> Before delete Node( 17 )
75 is root, the type of node is ROOT, precursor 65, successor 84.
33 is 75's left child, the type of node is TRUNK, precursor 17, successor 37.
17 is 33's left child, the type of node is LEAF, successor 33.
57 is 33's right child, the type of node is TRUNK, precursor 37, successor 65.
37 is 57's left child, the type of node is LEAF, precursor 33, successor 57.
65 is 57's right child, the type of node is LEAF, precursor 57, successor 75.
85 is 75's right child, the type of node is TRUNK, precursor 84, successor 93.
84 is 85's left child, the type of node is LEAF, precursor 75, successor 85.
93 is 85's right child, the type of node is LEAF, precursor 85.
[delete_avltree] the Node( 17 ) successor is 33( 0x7fc0e8400420 )
[delete_avltree] n_father -> key = 33
17 's type 4
--------
[[delete_avltree, n_successor]]the Node information: key 33 , father 75 , right 57
[delete_avltree, bstree_delete]
75 is root, the type of node is ROOT, precursor 65, successor 84.
33 is 75's left child, the type of node is TRUNK, successor 37.
57 is 33's right child, the type of node is TRUNK, precursor 37, successor 65.
37 is 57's left child, the type of node is LEAF, precursor 33, successor 57.
65 is 57's right child, the type of node is LEAF, precursor 57, successor 75.
85 is 75's right child, the type of node is TRUNK, precursor 84, successor 93.
84 is 85's left child, the type of node is LEAF, precursor 75, successor 85.
93 is 85's right child, the type of node is LEAF, precursor 85.
[lost_balance_node] tmp -> key = 33( 0x7fc0e8400420 )
[lost_balance_node]  found lost blance Node address is 0x7fc0e8400420, value is 33
====================> k1 -> key  = 33
====================> get_node_height( k1 -> left  ) = 0
====================> get_node_height( k1 -> right  ) = 2
====================> get_node_height( k1 -> right -> left ) = 1
====================> get_node_height( k1 -> left ) = 0
[delete_avltree, special single left rotation]
===============================> After delete Node( 17 ):
75 is root, the type of node is ROOT, precursor 65, successor 84.
57 is 75's left child, the type of node is TRUNK, precursor 37, successor 65.
33 is 57's left child, the type of node is TRUNK, successor 37.
37 is 33's right child, the type of node is LEAF, precursor 33, successor 57.
65 is 57's right child, the type of node is LEAF, precursor 57, successor 75.
85 is 75's right child, the type of node is TRUNK, precursor 84, successor 93.
84 is 85's left child, the type of node is LEAF, precursor 75, successor 85.
93 is 85's right child, the type of node is LEAF, precursor 85.
idx = 7, key = 17
===============================> Before delete Node( 17 )
75 is root, the type of node is ROOT, precursor 65, successor 84.
57 is 75's left child, the type of node is TRUNK, precursor 37, successor 65.
33 is 57's left child, the type of node is TRUNK, successor 37.
37 is 33's right child, the type of node is LEAF, precursor 33, successor 57.
65 is 57's right child, the type of node is LEAF, precursor 57, successor 75.
85 is 75's right child, the type of node is TRUNK, precursor 84, successor 93.
84 is 85's left child, the type of node is LEAF, precursor 75, successor 85.
93 is 85's right child, the type of node is LEAF, precursor 85.
[delete_avltree] the Node( 17 ) is not found!
===============================> After delete Node( 17 ):
75 is root, the type of node is ROOT, precursor 65, successor 84.
57 is 75's left child, the type of node is TRUNK, precursor 37, successor 65.
33 is 57's left child, the type of node is TRUNK, successor 37.
37 is 33's right child, the type of node is LEAF, precursor 33, successor 57.
65 is 57's right child, the type of node is LEAF, precursor 57, successor 75.
85 is 75's right child, the type of node is TRUNK, precursor 84, successor 93.
84 is 85's left child, the type of node is LEAF, precursor 75, successor 85.
93 is 85's right child, the type of node is LEAF, precursor 85.
idx = 3, key = 28
===============================> Before delete Node( 28 )
75 is root, the type of node is ROOT, precursor 65, successor 84.
57 is 75's left child, the type of node is TRUNK, precursor 37, successor 65.
33 is 57's left child, the type of node is TRUNK, successor 37.
37 is 33's right child, the type of node is LEAF, precursor 33, successor 57.
65 is 57's right child, the type of node is LEAF, precursor 57, successor 75.
85 is 75's right child, the type of node is TRUNK, precursor 84, successor 93.
84 is 85's left child, the type of node is LEAF, precursor 75, successor 85.
93 is 85's right child, the type of node is LEAF, precursor 85.
[delete_avltree] the Node( 28 ) is not found!
===============================> After delete Node( 28 ):
75 is root, the type of node is ROOT, precursor 65, successor 84.
57 is 75's left child, the type of node is TRUNK, precursor 37, successor 65.
33 is 57's left child, the type of node is TRUNK, successor 37.
37 is 33's right child, the type of node is LEAF, precursor 33, successor 57.
65 is 57's right child, the type of node is LEAF, precursor 57, successor 75.
85 is 75's right child, the type of node is TRUNK, precursor 84, successor 93.
84 is 85's left child, the type of node is LEAF, precursor 75, successor 85.
93 is 85's right child, the type of node is LEAF, precursor 85.
idx = 8, key = 65
===============================> Before delete Node( 65 )
75 is root, the type of node is ROOT, precursor 65, successor 84.
57 is 75's left child, the type of node is TRUNK, precursor 37, successor 65.
33 is 57's left child, the type of node is TRUNK, successor 37.
37 is 33's right child, the type of node is LEAF, precursor 33, successor 57.
65 is 57's right child, the type of node is LEAF, precursor 57, successor 75.
85 is 75's right child, the type of node is TRUNK, precursor 84, successor 93.
84 is 85's left child, the type of node is LEAF, precursor 75, successor 85.
93 is 85's right child, the type of node is LEAF, precursor 85.
[delete_avltree] the Node( 65 ) successor is 75( 0x7fc0e8400370 )
[delete_avltree] n_father -> key = 57
65 's type 4
--------
[[delete_avltree, n_successor]]the Node information: key 75 , left 57 , right 85
[delete_avltree, bstree_delete]
75 is root, the type of node is ROOT, precursor 57, successor 84.
57 is 75's left child, the type of node is TRUNK, precursor 37, successor 75.
33 is 57's left child, the type of node is TRUNK, successor 37.
37 is 33's right child, the type of node is LEAF, precursor 33, successor 57.
85 is 75's right child, the type of node is TRUNK, precursor 84, successor 93.
84 is 85's left child, the type of node is LEAF, precursor 75, successor 85.
93 is 85's right child, the type of node is LEAF, precursor 85.
[lost_balance_node] tmp -> key = 75( 0x7fc0e8400370 )
===============================> After delete Node( 65 ):
75 is root, the type of node is ROOT, precursor 57, successor 84.
57 is 75's left child, the type of node is TRUNK, precursor 37, successor 75.
33 is 57's left child, the type of node is TRUNK, successor 37.
37 is 33's right child, the type of node is LEAF, precursor 33, successor 57.
85 is 75's right child, the type of node is TRUNK, precursor 84, successor 93.
84 is 85's left child, the type of node is LEAF, precursor 75, successor 85.
93 is 85's right child, the type of node is LEAF, precursor 85.
idx = 2, key = 85
===============================> Before delete Node( 85 )
75 is root, the type of node is ROOT, precursor 57, successor 84.
57 is 75's left child, the type of node is TRUNK, precursor 37, successor 75.
33 is 57's left child, the type of node is TRUNK, successor 37.
37 is 33's right child, the type of node is LEAF, precursor 33, successor 57.
85 is 75's right child, the type of node is TRUNK, precursor 84, successor 93.
84 is 85's left child, the type of node is LEAF, precursor 75, successor 85.
93 is 85's right child, the type of node is LEAF, precursor 85.
[delete_avltree] the Node( 85 ) successor is 93( 0x7fc0e8400440 )
[delete_avltree] n_father -> key = 75
85 's type 3
--------
[[delete_avltree, n_successor]]the Node information: key 93 , father 93
[delete_avltree, bstree_delete]
75 is root, the type of node is ROOT, precursor 57, successor 84.
57 is 75's left child, the type of node is TRUNK, precursor 37, successor 75.
33 is 57's left child, the type of node is TRUNK, successor 37.
37 is 33's right child, the type of node is LEAF, precursor 33, successor 57.
93 is 75's right child, the type of node is TRUNK, precursor 84.
84 is 93's left child, the type of node is LEAF, precursor 75, successor 93.
[lost_balance_node] tmp -> key = 93( 0x7fc0e8400440 )
[lost_balance_node] tmp -> key = 93( 0x7fc0e84003c0 )
[lost_balance_node] tmp -> key = 75( 0x7fc0e8400370 )
===============================> After delete Node( 85 ):
75 is root, the type of node is ROOT, precursor 57, successor 84.
57 is 75's left child, the type of node is TRUNK, precursor 37, successor 75.
33 is 57's left child, the type of node is TRUNK, successor 37.
37 is 33's right child, the type of node is LEAF, precursor 33, successor 57.
93 is 75's right child, the type of node is TRUNK, precursor 84.
84 is 93's left child, the type of node is LEAF, precursor 75, successor 93.
idx = 3, key = 28
===============================> Before delete Node( 28 )
75 is root, the type of node is ROOT, precursor 57, successor 84.
57 is 75's left child, the type of node is TRUNK, precursor 37, successor 75.
33 is 57's left child, the type of node is TRUNK, successor 37.
37 is 33's right child, the type of node is LEAF, precursor 33, successor 57.
93 is 75's right child, the type of node is TRUNK, precursor 84.
84 is 93's left child, the type of node is LEAF, precursor 75, successor 93.
[delete_avltree] the Node( 28 ) is not found!
===============================> After delete Node( 28 ):
75 is root, the type of node is ROOT, precursor 57, successor 84.
57 is 75's left child, the type of node is TRUNK, precursor 37, successor 75.
33 is 57's left child, the type of node is TRUNK, successor 37.
37 is 33's right child, the type of node is LEAF, precursor 33, successor 57.
93 is 75's right child, the type of node is TRUNK, precursor 84.
84 is 93's left child, the type of node is LEAF, precursor 75, successor 93.
idx = 4, key = 84
===============================> Before delete Node( 84 )
75 is root, the type of node is ROOT, precursor 57, successor 84.
57 is 75's left child, the type of node is TRUNK, precursor 37, successor 75.
33 is 57's left child, the type of node is TRUNK, successor 37.
37 is 33's right child, the type of node is LEAF, precursor 33, successor 57.
93 is 75's right child, the type of node is TRUNK, precursor 84.
84 is 93's left child, the type of node is LEAF, precursor 75, successor 93.
[delete_avltree] the Node( 84 ) successor is 93( 0x7fc0e84003c0 )
[delete_avltree] n_father -> key = 93
84 's type 4
--------
[[delete_avltree, n_successor]]the Node information: key 93 , father 75
[delete_avltree, bstree_delete]
75 is root, the type of node is ROOT, precursor 57, successor 93.
57 is 75's left child, the type of node is TRUNK, precursor 37, successor 75.
33 is 57's left child, the type of node is TRUNK, successor 37.
37 is 33's right child, the type of node is LEAF, precursor 33, successor 57.
93 is 75's right child, the type of node is LEAF, precursor 75.
[lost_balance_node] tmp -> key = 93( 0x7fc0e84003c0 )
[lost_balance_node] tmp -> key = 75( 0x7fc0e8400370 )
[lost_balance_node]  found lost blance Node address is 0x7fc0e8400370, value is 75
====================> k1 -> key  = 75
====================> get_node_height( k1 -> left  ) = 3
====================> get_node_height( k1 -> right  ) = 1
====================> get_node_height( k1 -> left -> right ) = 0
====================> get_node_height( k1 -> right ) = 1
[delete_avltree left right rotation]
[left_rotation] get_node_height( k1 -> right ) = 2, get_node_height( k1 -> left ) = 0
[left_rotation] get_node_height( k1 -> right ) - get_node_height( k1 -> left ) = -2
[1]    29507 segmentation fault  ./a.out